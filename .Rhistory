Sys.sleep(1.0)
password_field$sendKeysToElement(list(password))
Sys.sleep(3.0)
login_button_2 <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
login_button_2$clickElement()
Sys.sleep(5.0)
playlist_filter <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[1]/div/div/div[1]/div/button[1]/span')
playlist_filter$clickElement()
Sys.sleep(2.0)
scroll_playlists <- function(driver) {
sidebar <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]')  # Adjust if needed
prev_count <- 0
repeat {
# Find current number of loaded playlists
playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
num_playlists <- length(playlists)
# Break if no more playlists are loading
if (num_playlists == prev_count) break
prev_count <- num_playlists
# Scroll the sidebar
driver$executeScript("arguments[0].scrollTop = arguments[0].scrollHeight;", list(sidebar))
Sys.sleep(1.5)  # Allow time for playlists to load
}
return(num_playlists)
#playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
#num_playlists <- length(playlists)
#print(num_playlists)
}}
playlist_scrape(url1)
playlist_scrape <- function(url){
rD <- rsDriver(browser = c("firefox"), verbose = FALSE, port = netstat::free_port(random = TRUE), chromever = NULL)
driver <- rD$client
driver$navigate(url)
Sys.sleep(4.0)
reject_cookies_button <- driver$findElement(using = 'xpath', '//*[@id="onetrust-reject-all-handler"]')
reject_cookies_button$clickElement()
Sys.sleep(2.0)
# CHECK: pop-up appears sometimes, the following function will close it if it exists
popup_exists <- length(driver$findElements(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')) > 0
if (popup_exists) {
close_popup <- driver$findElement(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')
close_popup$clickElement()
Sys.sleep(3.0)
}
login_button <- driver$findElement(using = 'xpath', '//*[@id="main"]/div/div[2]/div[1]/div[3]/div/div[2]/button[2]')
login_button$clickElement()
Sys.sleep(3.0)
username_field <- driver$findElement(using = 'xpath', '//*[@id="login-username"]')
username_field$clickElement()
Sys.sleep(1.0)
username_field$sendKeysToElement(list(username))
Sys.sleep(1.0)
password_field <- driver$findElement(using = 'xpath', '//*[@id="login-password"]')
password_field$clickElement()
Sys.sleep(1.0)
password_field$sendKeysToElement(list(password))
Sys.sleep(3.0)
login_button_2 <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
login_button_2$clickElement()
Sys.sleep(5.0)
playlist_filter <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[1]/div/div/div[1]/div/button[1]/span')
playlist_filter$clickElement()
Sys.sleep(2.0)
scroll_playlists <- function(driver) {
sidebar <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]')  # Adjust if needed
prev_count <- 0
repeat {
# Find current number of loaded playlists
playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
num_playlists <- length(playlists)
# Break if no more playlists are loading
if (num_playlists == prev_count) break
prev_count <- num_playlists
# Scroll the sidebar
driver$executeScript("arguments[0].scrollTop = arguments[0].scrollHeight;", list(sidebar))
Sys.sleep(1.5)  # Allow time for playlists to load
}
return(num_playlists)
#playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
#num_playlists <- length(playlists)
#print(num_playlists)
}}
playlist_scrape(url1)
playlist_scrape <- function(url){
rD <- rsDriver(browser = c("firefox"), verbose = FALSE, port = netstat::free_port(random = TRUE), chromever = NULL)
driver <- rD$client
driver$navigate(url)
Sys.sleep(4.0)
reject_cookies_button <- driver$findElement(using = 'xpath', '//*[@id="onetrust-reject-all-handler"]')
reject_cookies_button$clickElement()
Sys.sleep(2.0)
# CHECK: pop-up appears sometimes, the following function will close it if it exists
popup_exists <- length(driver$findElements(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')) > 0
if (popup_exists) {
close_popup <- driver$findElement(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')
close_popup$clickElement()
Sys.sleep(3.0)
}
login_button <- driver$findElement(using = 'xpath', '//*[@id="main"]/div/div[2]/div[1]/div[3]/div/div[2]/button[2]')
login_button$clickElement()
Sys.sleep(3.0)
username_field <- driver$findElement(using = 'xpath', '//*[@id="login-username"]')
username_field$clickElement()
Sys.sleep(1.0)
username_field$sendKeysToElement(list(username))
Sys.sleep(1.0)
password_field <- driver$findElement(using = 'xpath', '//*[@id="login-password"]')
password_field$clickElement()
Sys.sleep(1.0)
password_field$sendKeysToElement(list(password))
Sys.sleep(3.0)
login_button_2 <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
login_button_2$clickElement()
Sys.sleep(5.0)
playlist_filter <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[1]/div/div/div[1]/div/button[1]')
playlist_filter$clickElement()
Sys.sleep(2.0)
scroll_playlists <- function(driver) {
sidebar <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]')  # Adjust if needed
prev_count <- 0
repeat {
# Find current number of loaded playlists
playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
num_playlists <- length(playlists)
# Break if no more playlists are loading
if (num_playlists == prev_count) break
prev_count <- num_playlists
# Scroll the sidebar
driver$executeScript("arguments[0].scrollTop = arguments[0].scrollHeight;", list(sidebar))
Sys.sleep(1.5)  # Allow time for playlists to load
}
return(num_playlists)
#playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
#num_playlists <- length(playlists)
#print(num_playlists)
}}
playlist_scrape(url1)
knitr::opts_chunk$set(echo = TRUE)
read.csv("/Users/avablanchette/Documents/Local/GY455/workshop/projects.csv")
workshop_csv <- read.csv("/Users/avablanchette/Documents/Local/GY455/workshop/projects.csv")
View(workshop_csv)
workshop_csv <- read.csv("/Users/avablanchette/Documents/Local/GY455/workshop/data_s3.csv")
print(workshop_csv)
library(janitor)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(janitor)
library(ggplot2)
clean_names(workshop_csv)
clean_names(workshop_csv)
print(workshop_csv)
clean_names(workshop_csv)
View(workshop_csv)
workshop_csv <- clean_names(workshop_csv)
workshop_csv <- mutate(workshop_csv) %>%
as_date(workshop_csv$planning_decision)
workshop_csv
workshop_csv <- workshop_csv %>%
mutate(
planning_start = as.Date(planning_start),
planning_decision = as.Date(planning_decision),
open_date = as.Date(open_date)
)
View(workshop_csv)
count(workshop_csv$offshore = "Yes")
count(workshop_csv$offshore == "Yes")
playlist_scrape <- function(url){
rD <- rsDriver(browser = c("firefox"), verbose = FALSE, port = netstat::free_port(random = TRUE), chromever = NULL)
driver <- rD$client
driver$navigate(url)
Sys.sleep(4.0)
reject_cookies_button <- driver$findElement(using = 'xpath', '//*[@id="onetrust-reject-all-handler"]')
reject_cookies_button$clickElement()
Sys.sleep(2.0)
# CHECK: pop-up appears sometimes, the following function will close it if it exists
popup_exists <- length(driver$findElements(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')) > 0
if (popup_exists) {
close_popup <- driver$findElement(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')
close_popup$clickElement()
Sys.sleep(3.0)
}
login_button <- driver$findElement(using = 'xpath', '//*[@id="main"]/div/div[2]/div[1]/div[3]/div/div[2]/button[2]')
login_button$clickElement()
Sys.sleep(3.0)
username_field <- driver$findElement(using = 'xpath', '//*[@id="login-username"]')
username_field$clickElement()
Sys.sleep(1.0)
username_field$sendKeysToElement(list(username))
Sys.sleep(1.0)
password_field <- driver$findElement(using = 'xpath', '//*[@id="login-password"]')
password_field$clickElement()
Sys.sleep(1.0)
password_field$sendKeysToElement(list(password))
Sys.sleep(3.0)
login_button_2 <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
login_button_2$clickElement()
Sys.sleep(5.0)
playlist_filter <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[1]/div/div/div[1]/div/button[1]')
playlist_filter$clickElement()
Sys.sleep(2.0)
scroll_playlists <- function(driver) {
sidebar <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]')  # Adjust if needed
prev_count <- 0
repeat {
# Find current number of loaded playlists
playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
num_playlists <- length(playlists)
# Break if no more playlists are loading
if (num_playlists == prev_count) break
prev_count <- num_playlists
# Scroll the sidebar
driver$executeScript("arguments[0].scrollTop = arguments[0].scrollHeight;", list(sidebar))
Sys.sleep(1.5)  # Allow time for playlists to load
}
return(num_playlists)
#playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
#num_playlists <- length(playlists)
#print(num_playlists)
}}
playlist_scrape(url1)
url1 <- "https://open.spotify.com/"
playlist_scrape(url1)
playlist_scrape <- function(url){
rD <- rsDriver(browser = c("firefox"), verbose = FALSE, port = netstat::free_port(random = TRUE), chromever = NULL)
driver <- rD$client
driver$navigate(url)
Sys.sleep(4.0)
reject_cookies_button <- driver$findElement(using = 'xpath', '//*[@id="onetrust-reject-all-handler"]')
reject_cookies_button$clickElement()
Sys.sleep(2.0)
# CHECK: pop-up appears sometimes, the following function will close it if it exists
popup_exists <- length(driver$findElements(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')) > 0
if (popup_exists) {
close_popup <- driver$findElement(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')
close_popup$clickElement()
Sys.sleep(3.0)
}
login_button <- driver$findElement(using = 'xpath', '//*[@id="main"]/div/div[2]/div[1]/div[3]/div/div[2]/button[2]')
login_button$clickElement()
Sys.sleep(3.0)
username_field <- driver$findElement(using = 'xpath', '//*[@id="login-username"]')
username_field$clickElement()
Sys.sleep(1.0)
username_field$sendKeysToElement(list(username))
Sys.sleep(1.0)
# IF "CONTINUE" BUTTON APPEARS TO CONTINUE ONTO PASSWORD PAGE: [CREATE EXTRA STEP TO CONTINUE THROUGH]
password_field <- driver$findElement(using = 'xpath', '//*[@id="login-password"]')
password_field$clickElement()
Sys.sleep(1.0)
password_field$sendKeysToElement(list(password))
Sys.sleep(3.0)
login_button_2 <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
login_button_2$clickElement()
Sys.sleep(5.0)
playlist_filter <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[1]/div/div/div[1]/div/button[1]')
playlist_filter$clickElement()
Sys.sleep(2.0)
scroll_playlists <- function(driver) {
sidebar <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]')  # Adjust if needed
prev_count <- 0
repeat {
# Find current number of loaded playlists
playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
num_playlists <- length(playlists)
# Break if no more playlists are loading
if (num_playlists == prev_count) break
prev_count <- num_playlists
# Scroll the sidebar
driver$executeScript("arguments[0].scrollTop = arguments[0].scrollHeight;", list(sidebar))
Sys.sleep(1.5)  # Allow time for playlists to load
}
return(num_playlists)
#playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
#num_playlists <- length(playlists)
#print(num_playlists)
}}
playlist_scrape(url1)
print(resized_img)
img <- image_read("/Users/avablanchette/Documents/Local/Workshop/image_render/ruthie.jpeg") %>% image_resize("200x200")
# Get image dimensions
info <- image_info(img)
width <- info$width
height <- info$height
# Determine square crop size (smallest dimension)
crop_size <- min(width, height)
# Calculate crop starting point (rounded to avoid errors)
x_offset <- round((width - crop_size) / 2)
y_offset <- round((height - crop_size) / 2)
# Crop image to centered square
cropped_img <- image_crop(img, geometry = sprintf("%dx%d+%d+%d",
crop_size, crop_size,
x_offset, y_offset))
# Resize to 200x200
resized_img <- image_resize(cropped_img, "200x200")
# Display result
print(resized_img)
gray_img <- image_convert(resized_img, colorspace = "gray")
playlist_scrape <- function(url){
rD <- rsDriver(browser = c("firefox"), verbose = FALSE, port = netstat::free_port(random = TRUE), chromever = NULL)
driver <- rD$client
driver$navigate(url)
Sys.sleep(4.0)
reject_cookies_button <- driver$findElement(using = 'xpath', '//*[@id="onetrust-reject-all-handler"]')
reject_cookies_button$clickElement()
Sys.sleep(2.0)
# CHECK: pop-up appears sometimes, the following function will close it if it exists
popup_exists <- length(driver$findElements(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')) > 0
if (popup_exists) {
close_popup <- driver$findElement(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')
close_popup$clickElement()
Sys.sleep(3.0)
}
login_button <- driver$findElement(using = 'xpath', '//*[@id="main"]/div/div[2]/div[1]/div[3]/div/div[2]/button[2]')
login_button$clickElement()
Sys.sleep(3.0)
username_field <- driver$findElement(using = 'xpath', '//*[@id="login-username"]')
username_field$clickElement()
Sys.sleep(1.0)
username_field$sendKeysToElement(list(username))
Sys.sleep(1.0)
# IF "CONTINUE" BUTTON APPEARS TO CONTINUE ONTO PASSWORD PAGE: [CREATE EXTRA STEP TO CONTINUE THROUGH]
# continue_exists <- length(driver$findElements(using = 'xpath', '[XPATH ENTER]'))
# if(continue_exists){
#  click_continue <- driver$findElement(using = 'xpath', '[XPATH ENTER]')
#  click_continue$clickElement()
#}
password_field <- driver$findElement(using = 'xpath', '//*[@id="login-password"]')
password_field$clickElement()
Sys.sleep(1.0)
password_field$sendKeysToElement(list(password))
Sys.sleep(3.0)
login_button_2 <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
login_button_2$clickElement()
Sys.sleep(5.0)
playlist_filter <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[1]/div/div/div[1]/div/button[1]')
playlist_filter$clickElement()
Sys.sleep(2.0)
scroll_playlists <- function(driver) {
sidebar <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]')  # Adjust if needed
prev_count <- 0
repeat {
# Find current number of loaded playlists
playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
num_playlists <- length(playlists)
# Break if no more playlists are loading
if (num_playlists == prev_count) break
prev_count <- num_playlists
# Scroll the sidebar
driver$executeScript("arguments[0].scrollTop = arguments[0].scrollHeight;", list(sidebar))
Sys.sleep(1.5)  # Allow time for playlists to load
}
return(num_playlists)
#playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
#num_playlists <- length(playlists)
#print(num_playlists)
}}
playlist_scrape(url1)
playlist_scrape <- function(url){
rD <- rsDriver(browser = c("firefox"), verbose = FALSE, port = netstat::free_port(random = TRUE), chromever = NULL)
driver <- rD$client
driver$navigate(url)
Sys.sleep(4.0)
reject_cookies_button <- driver$findElement(using = 'xpath', '//*[@id="onetrust-reject-all-handler"]')
reject_cookies_button$clickElement()
Sys.sleep(2.0)
# CHECK: pop-up appears sometimes, the following function will close it if it exists
popup_exists <- length(driver$findElements(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')) > 0
if (popup_exists) {
close_popup <- driver$findElement(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')
close_popup$clickElement()
Sys.sleep(3.0)
}
login_button <- driver$findElement(using = 'xpath', '//*[@id="main"]/div/div[2]/div[1]/div[3]/div/div[2]/button[2]')
login_button$clickElement()
Sys.sleep(3.0)
username_field <- driver$findElement(using = 'xpath', '//*[@id="login-username"]')
username_field$clickElement()
Sys.sleep(1.0)
username_field$sendKeysToElement(list(username))
Sys.sleep(1.0)
# IF "CONTINUE" BUTTON APPEARS TO CONTINUE ONTO PASSWORD PAGE: [CREATE EXTRA STEP TO CONTINUE THROUGH]
#continue_exists <- length(driver$findElements(using = 'xpath', '//*[@id="login-button"]')) > 0
#if(continue_exists){
#  click_continue <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
#  click_continue$clickElement()
#}
password_field <- driver$findElement(using = 'xpath', '//*[@id="login-password"]')
password_field$clickElement()
Sys.sleep(1.0)
password_field$sendKeysToElement(list(password))
Sys.sleep(3.0)
login_button_2 <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
login_button_2$clickElement()
Sys.sleep(5.0)
playlist_filter <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[1]/div/div/div[1]/div/button[1]')
playlist_filter$clickElement()
Sys.sleep(2.0)
scroll_playlists <- function(driver) {
sidebar <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]')  # Adjust if needed
prev_count <- 0
repeat {
# Find current number of loaded playlists
playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
num_playlists <- length(playlists)
# Break if no more playlists are loading
if (num_playlists == prev_count) break
prev_count <- num_playlists
# Scroll the sidebar
driver$executeScript("arguments[0].scrollTop = arguments[0].scrollHeight;", list(sidebar))
Sys.sleep(1.5)  # Allow time for playlists to load
}
return(num_playlists)
#playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
#num_playlists <- length(playlists)
#print(num_playlists)
}}
playlist_scrape(url1)
playlist_scrape <- function(url){
rD <- rsDriver(browser = c("firefox"), verbose = FALSE, port = netstat::free_port(random = TRUE), chromever = NULL)
driver <- rD$client
driver$navigate(url)
Sys.sleep(4.0)
reject_cookies_button <- driver$findElement(using = 'xpath', '//*[@id="onetrust-reject-all-handler"]')
reject_cookies_button$clickElement()
Sys.sleep(2.0)
# CHECK: pop-up appears sometimes, the following function will close it if it exists
popup_exists <- length(driver$findElements(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')) > 0
if (popup_exists) {
close_popup <- driver$findElement(using = 'xpath', '/html/body/div[4]/div/div[3]/div/div[2]/button')
close_popup$clickElement()
Sys.sleep(3.0)
}
login_button <- driver$findElement(using = 'xpath', '//*[@id="main"]/div/div[2]/div[1]/div[3]/div/div[2]/button[2]')
login_button$clickElement()
Sys.sleep(3.0)
username_field <- driver$findElement(using = 'xpath', '//*[@id="login-username"]')
username_field$clickElement()
Sys.sleep(1.0)
username_field$sendKeysToElement(list(username))
Sys.sleep(1.0)
# IF "CONTINUE" BUTTON APPEARS TO CONTINUE ONTO PASSWORD PAGE: [CREATE EXTRA STEP TO CONTINUE THROUGH]
#continue_exists <- length(driver$findElements(using = 'xpath', '//*[@id="login-button"]')) > 0
#if(continue_exists){
#  click_continue <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
#  click_continue$clickElement()
#}
password_field <- driver$findElement(using = 'xpath', '//*[@id="login-password"]')
password_field$clickElement()
Sys.sleep(1.0)
password_field$sendKeysToElement(list(password))
Sys.sleep(3.0)
login_button_2 <- driver$findElement(using = 'xpath', '//*[@id="login-button"]')
login_button_2$clickElement()
Sys.sleep(5.0)
playlist_filter <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[1]/div/div/div[1]/div/button[1]')
playlist_filter$clickElement()
Sys.sleep(2.0)
scroll_playlists <- function(driver) {
sidebar <- driver$findElement(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]')  # Adjust if needed
prev_count <- 0
repeat {
# Find current number of loaded playlists
playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
num_playlists <- length(playlists)
# Break if no more playlists are loading
if (num_playlists == prev_count) break
prev_count <- num_playlists
# Scroll the sidebar
driver$executeScript("arguments[0].scrollTop = arguments[0].scrollHeight;", list(sidebar))
Sys.sleep(1.5)  # Allow time for playlists to load
}
return(num_playlists)
#playlists <- driver$findElements(using = 'xpath', '//*[@id="Desktop_LeftSidebar_Id"]/nav/div/div[1]/div[2]/div[2]/div/div[2]/ul/div/div[2]/li')
#num_playlists <- length(playlists)
#print(num_playlists)
}}
playlist_scrape(url1)
num_playlists
knitr::opts_chunk$set(echo = TRUE)
library(magick)
library(tidyverse)
img2 <- image_read("/Users/avablanchette/Documents/Local/Workshop/image_render/dorset.jpg") %>% image_resize("520x780")
# Get image dimensions
info <- image_info(img2)
width <- info$width
height <- info$height
# Display result
print(img2)
# Grayscale to ensure clean pixel ramp
gray_img2 <- image_convert(img2, colorspace = "gray")
print(gray_img2)
# Extract pixel data
img_matrix2 <- image_data(gray_img2)
print(dim(img_matrix2))
img_data2 <- as.integer(img_matrix2[1,,])  # Convert from raw to integer
img_data2 <- matrix(as.integer(img_matrix2[1, , ]), nrow = dim(img_matrix2)[2], ncol = dim(img_matrix2)[3])
# Normalize grayscale values (0 = darkest, 1 = lightest)
img_data2 <- img_data2 / 255  # Raw data ranges from 0-255
# Convert to a data frame for ggplot2
df2 <- expand.grid(x = 1:ncol(img_data2), y = nrow(img_data2):1)  # Flip Y-axis
df2$value <- c(t(img_data2))
# Create color ramp for Dorset
custom_palette <- colorRampPalette(c("black", "darkolivegreen", "olivedrab", "forestgreen", "darkseagreen3", "lightgoldenrod", "white")) #Built color ramp
df2$color <- custom_palette(100)[as.numeric(cut(df2$value, breaks = 100))]
# Plot
dorset_color <- ggplot(df2, aes(x, y, fill = color)) +
geom_raster() +
scale_fill_identity() +
theme_void() +
coord_fixed()
dorset_color
ggsave("Users/avablanchette/Documents/Local/Workshop/image_render/output/dorset_output.png", plot = dorset_color, width = 6, height = 9, dpi = 150)
